771. Jewels and Stones
Easy


You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.



// C++ 
class Solution {
public:
    int numJewelsInStones(string J, string S) {
        unordered_map<char,int> m;
        int res = 0;
        for(auto &ch : J) m[ch] = 1;
        for(auto &ch : S) {
            if(m[ch] == 1) res++;
        }
        return res;
    }
};



// JAVA 
class Solution {
    public int numJewelsInStones(String J, String S) {
        HashSet<Character> h = new HashSet<Character>();
        int counter = 0;
        for(int i = 0 ; i < J.length() ; i++){
            if(!h.contains(J.charAt(i)))
                h.add(J.charAt(i));
        }
        for(int i = 0 ; i < S.length() ; i++){
            if(h.contains(S.charAt(i)))counter++;
        }
        return counter;
        
    }
}