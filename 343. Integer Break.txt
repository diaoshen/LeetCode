343. Integer Break
Medium

890

207

Add to List

Share
Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.

Example 1:

Input: 2
Output: 1
Explanation: 2 = 1 + 1, 1 × 1 = 1.
Example 2:

Input: 10
Output: 36
Explanation: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36.
Note: You may assume that n is not less than 2 and not larger than 58.



C++ DP Top down (Memoization)

class Solution {
public:
    
    
    int integerBreak(int n) {    
        vector<int> r(n+1 , -1);
        return helper(n , r);
    }
    
    int helper(int n , vector<int> &r) {
        if(r[n] >= 1) return r[n];
        int q;
        if(n == 2)
            q = 1;
        else {
            q = -999;
            for(int i = 1 ; i <= n ; i++) {
                q = max(q , i*helper(n-i , r));
                q = max(q , i*(n-i));
            }
            r[n] = q;
        }
        return q;
    }
};


C++ DP (Bottom Up)
class Solution {
public:
      
    int integerBreak(int n) {
        
        vector<int> r(n+1, 1);
        for(int j = 2 ; j <= n ; j++){
            int q = -999;
            for(int i = 1 ; i < j ; i++){
                q = max( q, i*r[j-i]);
                q = max( q, i*(j-i));
            }
            r[j] = q;
        }
        return r[n];
    
    }

};
