9. Palindrome Number
Easy


Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Follow up:

Coud you solve it without converting the integer to a string?



Solution: Generate reverse of the input number.


C++ Solution

class Solution {
public:
    bool isPalindrome(int x) {
        if(x == 0) return true;
        if(x < 0 ) return false; 

        long int res = 0;
        for(long int i = x ; i > 0 ; i/=10){
            res = (res*10) + i%10;
        }
        return res == x;
    }
};


OR 

class Solution {
public:
    bool isPalindrome(int x) {
        if(x == 0) return true;
        if(x < 0) return false; 

        long int num = x;
        long int res = 0;
        while(num > 0){
            res = res*10;
            res += num%10;
            num = num/10;
        }
        return res == x;
    }
};

OR

class Solution {
public:
    bool isPalindrome(int x) {
        if(x == 0) return true;
        if(x < 0 || (x % 10 == 0 && x != 0)) return false; 

        int reverse = 0;
        while(x > reverse){
            reverse = reverse * 10 + x % 10;
            x /= 10;
        }
        return x == reverse || x == reverse/10;
    }
};

