557. Reverse Words in a String III
Easy


Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.
Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"

Note: In the string, each word is separated by single space and there will not be any extra space in the string. 


C++ Solution 

class Solution {
public:
    string reverseWords(string s) {
        stack<char> reverse;
        int c = 0;
        for(int i = 0 ; i < s.size() ; i++) {
            if(s[i] != ' ') {
                reverse.push(s[i]);
            }
            else {
                while(!reverse.empty()) {
                    s[c++] = reverse.top();
                    reverse.pop();
                }
                c++;
            }
        }
        while(!reverse.empty()){
            s[c++] = reverse.top();
            reverse.pop();
        }
        return s;
    }
};

Success
Details 
Runtime: 20 ms, faster than 88.43% of C++ online submissions for Reverse Words in a String III.
Memory Usage: 12 MB, less than 34.78% of C++ online submissions for Reverse Words in a String III.